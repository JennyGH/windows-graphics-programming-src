CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(WindowsGraphicsProgramming)
SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
MESSAGE(STATUS "PROJECT INFO:")
MESSAGE(STATUS "    CMAKE_PROJECT_NAME:         ${CMAKE_PROJECT_NAME}")
MESSAGE(STATUS "    CMAKE_BUILD_TYPE:           ${CMAKE_BUILD_TYPE}")
MESSAGE(STATUS "    CMAKE_SOURCE_DIR:           ${CMAKE_SOURCE_DIR}")
MESSAGE(STATUS "    CMAKE_PROJECT_VERSION:      ${CMAKE_PROJECT_VERSION}")
MESSAGE(STATUS "    CMAKE_CXX_COMPILE_FEATURES: ${CMAKE_CXX_COMPILE_FEATURES}")

MESSAGE(STATUS "SYSTEM INFO:")
MESSAGE(STATUS "    CMAKE_SYSTEM_NAME:      ${CMAKE_SYSTEM_NAME}")
MESSAGE(STATUS "    CMAKE_SYSTEM_PROCESSOR: ${CMAKE_SYSTEM_PROCESSOR}")
MESSAGE(STATUS "    CMAKE_SIZEOF_VOID_P:    ${CMAKE_SIZEOF_VOID_P}")

########## For different platform ##########
IF(UNIX AND NOT APPLE)
    SET(LINUX 1)
    ADD_DEFINITIONS(-DLINUX=1)
ENDIF(UNIX AND NOT APPLE)

IF(APPLE)
    SET(APPLE 1)
    ADD_DEFINITIONS(-DAPPLE=1)
ENDIF(APPLE)

IF(WIN32)
    SET(WINDOWS 1)
    ADD_DEFINITIONS(-DWINDOWS=1)
ENDIF(WIN32)
###########################################

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY     "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY     "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY     "${CMAKE_BINARY_DIR}/bin")

IF(WINDOWS)
    SET(CMAKE_C_FLAGS                  "${CMAKE_C_FLAGS}   /MP")
    SET(CMAKE_CXX_FLAGS                "${CMAKE_CXX_FLAGS} /MP")
    SET(CMAKE_CXX_FLAGS_RELEASE        "${CMAKE_CXX_FLAGS_RELEASE} /O2 /W0")
ELSE(WINDOWS)
    SET(CMAKE_C_FLAGS                  "${CMAKE_C_FLAGS}   -fPIC")
    SET(CMAKE_CXX_FLAGS                "${CMAKE_CXX_FLAGS} -fPIC")
	SET(CMAKE_CXX_FLAGS_RELEASE        "${CMAKE_CXX_FLAGS_RELEASE} -O3 -w")
ENDIF(WINDOWS)

ADD_DEFINITIONS(
    # -DUNICODE
    # -D_UNICODE
    -D_CRT_SECURE_NO_DEPRECATE=1
	# -D_WIN32_WINNT=0x0500 # Required for VS 2008 (fails on XP and Win2000 without this fix)
)

INCLUDE_DIRECTORIES(
)

LINK_DIRECTORIES(
)

FUNCTION(GROUP_FILES ARGS)
    MATH(EXPR BEGIN_INDEX 0)
    MATH(EXPR END_INDEX "${ARGC} - 1")
    LIST(GET ARGV ${BEGIN_INDEX} TARGET_FILES)
    LIST(GET ARGV ${END_INDEX}   GROUP_PREFIX)
    MESSAGE(STATUS "TARGET_FILES: ${TARGET_FILES}")
    MESSAGE(STATUS "GROUP_PREFIX: ${GROUP_PREFIX}")
    SET(INDEX ${BEGIN_INDEX})
    WHILE(INDEX LESS ${END_INDEX})
        LIST(GET ARGV ${INDEX} FILE)
        GET_FILENAME_COMPONENT(PARENT_DIR "${FILE}" DIRECTORY)
        STRING(REPLACE "${CMAKE_CURRENT_SOURCE_DIR}" "" GROUP "${PARENT_DIR}")
        STRING(REPLACE "/" "\\" GROUP "${GROUP}")
        SET(GROUP "${GROUP_PREFIX}${GROUP}")
        MESSAGE(STATUS "Group ${FILE} to ${GROUP}")
        SOURCE_GROUP("${GROUP}" FILES "${FILE}")
        MATH(EXPR INDEX "${INDEX} + 1")
    ENDWHILE()
ENDFUNCTION()

ADD_SUBDIRECTORY(include)
ADD_SUBDIRECTORY(Chapt_01)
ADD_SUBDIRECTORY(Chapt_02)
ADD_SUBDIRECTORY(Chapt_03)
ADD_SUBDIRECTORY(Chapt_04)
ADD_SUBDIRECTORY(Chapt_05)
ADD_SUBDIRECTORY(Chapt_06)
ADD_SUBDIRECTORY(Chapt_07)
ADD_SUBDIRECTORY(Chapt_08)
ADD_SUBDIRECTORY(Chapt_09)
ADD_SUBDIRECTORY(Chapt_10)
ADD_SUBDIRECTORY(Chapt_11)
ADD_SUBDIRECTORY(Chapt_12)
ADD_SUBDIRECTORY(Chapt_13)
ADD_SUBDIRECTORY(Chapt_14)
ADD_SUBDIRECTORY(Chapt_15)
ADD_SUBDIRECTORY(Chapt_16)
ADD_SUBDIRECTORY(Chapt_17)
ADD_SUBDIRECTORY(Chapt_18)
SET_TARGET_PROPERTIES(${PRJ_TARGET} PROPERTIES FOLDER "CMakePredefinedTargets")
